Grammar

    0 $accept: program $end

    1 program: main_body

    2 main_body: main_specification IS declarative_part begin sequence_of_statements exception_part END ';'

    3 main_specification: PROCEDURE ID

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin sequence_of_statements exception_part END ';'

    5 begin: BEG

    6 procedure_body_prime: procedure_specification

    7 procedure_specification: PROCEDURE ID

    8 formal_parameter_part: '(' parameters ')'
    9                      | %empty

   10 parameters: parameters ';' identifier_list ':' mode type_name
   11           | identifier_list ':' mode type_name

   12 mode: IN OUT
   13     | OUT
   14     | IN
   15     | %empty

   16 identifier_list: ID ',' identifier_list
   17                | ID

   18 type_name: ID

   19 declarative_part: objects ';' declarative_part
   20                 | types ';' declarative_part
   21                 | exceptions ';' declarative_part
   22                 | declarative_part_prime

   23 declarative_part_prime: procedure_body declarative_part_prime
   24                       | %empty

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT constant_number ')' OF type_name
   26      | TYPE ID IS RECORD component_list ENDREC
   27      | TYPE ID IS '(' identifier_list ')'
   28      | TYPE ID IS RANGE constant_number DOTDOT constant_number

   29 component_list: component ';' component_list
   30               | component ';'

   31 component: objects

   32 objects: identifier_list ':' type_name
   33        | identifier_list ':' CONSTANT ASSIGN constant_expression

   34 constant_number: ID
   35                | NUMBER

   36 constant_expression: expression

   37 exceptions: identifier_list ':' EXCEPTION

   38 sequence_of_statements: statement sequence_of_statements
   39                       | %empty

   40 statement: NULLWORD ';'
   41          | ID op_param op_assign ';'
   42          | loop_part
   43          | if_statement
   44          | RAISE ID ';'
   45          | RAISE ';'
   46          | CASE case_exp IS caseList ENDCASE ';'

   47 case_exp: expression

   48 caseList: caseList caseHandler
   49         | caseHandler

   50 caseHandler: WHEN case_choice ARROW sequence_of_statements

   51 case_choice: case_choice_sequence

   52 case_choice_sequence: expression '|' case_choice_sequence
   53                     | expression
   54                     | OTHERS

   55 op_param: '(' expression_list ')'
   56         | %empty

   57 op_assign: ASSIGN expression
   58          | ASSIGN enum_list
   59          | %empty

   60 enum_list: ID TICK ID '(' expression ')'
   61          | ID TICK ID '(' enum_list ')'
   62          | ID TICK ID

   63 expression_list: expression ',' expression_list
   64                | expression

   65 loop_part: loop_start loop_stmt_list ENDLOOP ';'

   66 loop_start: LOOP

   67 loop_stmt_list: loop_stmt
   68               | loop_stmt_list loop_stmt

   69 loop_stmt: statement
   70          | exit_cond

   71 exit_cond: EXIT ';'
   72          | EXITWHEN condition ';'

   73 condition: expression

   74 if_statement: if_start else_if else ENDIF ';'

   75 if_start: if_begin condition then sequence_of_statements

   76 if_begin: IF

   77 else_if: else_if_start else_if
   78        | %empty

   79 else_if_start: else_if_begin condition then sequence_of_statements

   80 else_if_begin: ELSEIF

   81 else: else_begin sequence_of_statements
   82     | %empty

   83 else_begin: ELSE

   84 then: THEN

   85 expression: relation
   86           | expression boolean_operation relation

   87 relation: simple_expression
   88         | relation relational_operation simple_expression

   89 simple_expression: term
   90                  | '-' term
   91                  | simple_expression adding_operation term

   92 term: factor
   93     | term multiplying_operation factor

   94 factor: primary
   95       | primary EXP primary
   96       | NOT primary

   97 primary: NUMBER
   98        | ID
   99        | '(' expression ')'
  100        | ID '(' expression ')'

  101 boolean_operation: AND
  102                  | OR

  103 relational_operation: EQ
  104                     | NEQ
  105                     | LT
  106                     | GT
  107                     | GTE
  108                     | LTE

  109 adding_operation: '+'
  110                 | '-'

  111 multiplying_operation: '*'
  112                      | '/'

  113 exception_part: exception_start exceptionList
  114               | %empty

  115 exception_start: EXCEPTION

  116 exceptionList: exceptionList exceptionHandler
  117              | exceptionHandler

  118 exceptionHandler: WHEN choice_sequence ARROW sequence_of_statements

  119 choice_sequence: choice_sequence '|' ID
  120                | ID
  121                | OTHERS


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 25 27 55 60 61 99 100
')' (41) 8 25 27 55 60 61 99 100
'*' (42) 111
'+' (43) 109
',' (44) 16 63
'-' (45) 90 110
'/' (47) 112
':' (58) 10 11 32 33 37
';' (59) 2 4 10 19 20 21 29 30 40 41 44 45 46 65 71 72 74
'|' (124) 52 119
error (256)
IS (258) 2 4 25 26 27 28 46
BEG (259) 5
END (260) 2 4
PROCEDURE (261) 3 7
ID (262) 3 7 16 17 18 25 26 27 28 34 41 44 60 61 62 98 100 119 120
NUMBER (263) 35 97
TYPE (264) 25 26 27 28
ARRAY (265) 25
RAISE (266) 44 45
OTHERS (267) 54 121
RECORD (268) 26
IN (269) 12 14
OUT (270) 12 13
RANGE (271) 28
CONSTANT (272) 33
ASSIGN (273) 33 57 58
EXCEPTION (274) 37 115
NULLWORD (275) 40
LOOP (276) 66
IF (277) 76
THEN (278) 84
ELSEIF (279) 80
ELSE (280) 83
CASE (281) 46
EXIT (282) 71
WHEN (283) 50 118
AND (284) 101
OR (285) 102
EQ (286) 103
NEQ (287) 104
LT (288) 105
GT (289) 106
GTE (290) 107
LTE (291) 108
TICK (292) 60 61 62
NOT (293) 96
EXP (294) 95
ARROW (295) 50 118
OF (296) 25
DOTDOT (297) 25 28
ENDIF (298) 74
ENDREC (299) 26
ENDLOOP (300) 65
ENDCASE (301) 46
EXITWHEN (302) 72


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
program (59)
    on left: 1, on right: 0
main_body (60)
    on left: 2, on right: 1
main_specification (61)
    on left: 3, on right: 2
procedure_body (62)
    on left: 4, on right: 23
begin (63)
    on left: 5, on right: 2 4
procedure_body_prime (64)
    on left: 6, on right: 4
procedure_specification (65)
    on left: 7, on right: 6
formal_parameter_part (66)
    on left: 8 9, on right: 4
parameters (67)
    on left: 10 11, on right: 8 10
mode (68)
    on left: 12 13 14 15, on right: 10 11
identifier_list (69)
    on left: 16 17, on right: 10 11 16 27 32 33 37
type_name (70)
    on left: 18, on right: 10 11 25 32
declarative_part (71)
    on left: 19 20 21 22, on right: 2 4 19 20 21
declarative_part_prime (72)
    on left: 23 24, on right: 22 23
types (73)
    on left: 25 26 27 28, on right: 20
component_list (74)
    on left: 29 30, on right: 26 29
component (75)
    on left: 31, on right: 29 30
objects (76)
    on left: 32 33, on right: 19 31
constant_number (77)
    on left: 34 35, on right: 25 28
constant_expression (78)
    on left: 36, on right: 33
exceptions (79)
    on left: 37, on right: 21
sequence_of_statements (80)
    on left: 38 39, on right: 2 4 38 50 75 79 81 118
statement (81)
    on left: 40 41 42 43 44 45 46, on right: 38 69
case_exp (82)
    on left: 47, on right: 46
caseList (83)
    on left: 48 49, on right: 46 48
caseHandler (84)
    on left: 50, on right: 48 49
case_choice (85)
    on left: 51, on right: 50
case_choice_sequence (86)
    on left: 52 53 54, on right: 51 52
op_param (87)
    on left: 55 56, on right: 41
op_assign (88)
    on left: 57 58 59, on right: 41
enum_list (89)
    on left: 60 61 62, on right: 58 61
expression_list (90)
    on left: 63 64, on right: 55 63
loop_part (91)
    on left: 65, on right: 42
loop_start (92)
    on left: 66, on right: 65
loop_stmt_list (93)
    on left: 67 68, on right: 65 68
loop_stmt (94)
    on left: 69 70, on right: 67 68
exit_cond (95)
    on left: 71 72, on right: 70
condition (96)
    on left: 73, on right: 72 75 79
if_statement (97)
    on left: 74, on right: 43
if_start (98)
    on left: 75, on right: 74
if_begin (99)
    on left: 76, on right: 75
else_if (100)
    on left: 77 78, on right: 74 77
else_if_start (101)
    on left: 79, on right: 77
else_if_begin (102)
    on left: 80, on right: 79
else (103)
    on left: 81 82, on right: 74
else_begin (104)
    on left: 83, on right: 81
then (105)
    on left: 84, on right: 75 79
expression (106)
    on left: 85 86, on right: 36 47 52 53 57 60 63 64 73 86 99 100
relation (107)
    on left: 87 88, on right: 85 86 88
simple_expression (108)
    on left: 89 90 91, on right: 87 88 91
term (109)
    on left: 92 93, on right: 89 90 91 93
factor (110)
    on left: 94 95 96, on right: 92 93
primary (111)
    on left: 97 98 99 100, on right: 94 95 96
boolean_operation (112)
    on left: 101 102, on right: 86
relational_operation (113)
    on left: 103 104 105 106 107 108, on right: 88
adding_operation (114)
    on left: 109 110, on right: 91
multiplying_operation (115)
    on left: 111 112, on right: 93
exception_part (116)
    on left: 113 114, on right: 2 4
exception_start (117)
    on left: 115, on right: 113
exceptionList (118)
    on left: 116 117, on right: 113 116
exceptionHandler (119)
    on left: 118, on right: 116 117
choice_sequence (120)
    on left: 119 120 121, on right: 118 119


State 0

    0 $accept: . program $end

    PROCEDURE  shift, and go to state 1

    program             go to state 2
    main_body           go to state 3
    main_specification  go to state 4


State 1

    3 main_specification: PROCEDURE . ID

    ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: main_body .

    $default  reduce using rule 1 (program)


State 4

    2 main_body: main_specification . IS declarative_part begin sequence_of_statements exception_part END ';'

    IS  shift, and go to state 7


State 5

    3 main_specification: PROCEDURE ID .

    $default  reduce using rule 3 (main_specification)


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 main_body: main_specification IS . declarative_part begin sequence_of_statements exception_part END ';'

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 15
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


State 8

    7 procedure_specification: PROCEDURE . ID

    ID  shift, and go to state 20


State 9

   16 identifier_list: ID . ',' identifier_list
   17                | ID .

    ','  shift, and go to state 21

    $default  reduce using rule 17 (identifier_list)


State 10

   25 types: TYPE . ID IS ARRAY '(' constant_number DOTDOT constant_number ')' OF type_name
   26      | TYPE . ID IS RECORD component_list ENDREC
   27      | TYPE . ID IS '(' identifier_list ')'
   28      | TYPE . ID IS RANGE constant_number DOTDOT constant_number

    ID  shift, and go to state 22


State 11

   23 declarative_part_prime: procedure_body . declarative_part_prime

    PROCEDURE  shift, and go to state 8

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    declarative_part_prime   go to state 23


State 12

    4 procedure_body: procedure_body_prime . formal_parameter_part IS declarative_part begin sequence_of_statements exception_part END ';'

    '('  shift, and go to state 24

    $default  reduce using rule 9 (formal_parameter_part)

    formal_parameter_part  go to state 25


State 13

    6 procedure_body_prime: procedure_specification .

    $default  reduce using rule 6 (procedure_body_prime)


State 14

   32 objects: identifier_list . ':' type_name
   33        | identifier_list . ':' CONSTANT ASSIGN constant_expression
   37 exceptions: identifier_list . ':' EXCEPTION

    ':'  shift, and go to state 26


State 15

    2 main_body: main_specification IS declarative_part . begin sequence_of_statements exception_part END ';'

    BEG  shift, and go to state 27

    begin  go to state 28


State 16

   22 declarative_part: declarative_part_prime .

    $default  reduce using rule 22 (declarative_part)


State 17

   20 declarative_part: types . ';' declarative_part

    ';'  shift, and go to state 29


State 18

   19 declarative_part: objects . ';' declarative_part

    ';'  shift, and go to state 30


State 19

   21 declarative_part: exceptions . ';' declarative_part

    ';'  shift, and go to state 31


State 20

    7 procedure_specification: PROCEDURE ID .

    $default  reduce using rule 7 (procedure_specification)


State 21

   16 identifier_list: ID ',' . identifier_list

    ID  shift, and go to state 9

    identifier_list  go to state 32


State 22

   25 types: TYPE ID . IS ARRAY '(' constant_number DOTDOT constant_number ')' OF type_name
   26      | TYPE ID . IS RECORD component_list ENDREC
   27      | TYPE ID . IS '(' identifier_list ')'
   28      | TYPE ID . IS RANGE constant_number DOTDOT constant_number

    IS  shift, and go to state 33


State 23

   23 declarative_part_prime: procedure_body declarative_part_prime .

    $default  reduce using rule 23 (declarative_part_prime)


State 24

    8 formal_parameter_part: '(' . parameters ')'

    ID  shift, and go to state 9

    parameters       go to state 34
    identifier_list  go to state 35


State 25

    4 procedure_body: procedure_body_prime formal_parameter_part . IS declarative_part begin sequence_of_statements exception_part END ';'

    IS  shift, and go to state 36


State 26

   32 objects: identifier_list ':' . type_name
   33        | identifier_list ':' . CONSTANT ASSIGN constant_expression
   37 exceptions: identifier_list ':' . EXCEPTION

    ID         shift, and go to state 37
    CONSTANT   shift, and go to state 38
    EXCEPTION  shift, and go to state 39

    type_name  go to state 40


State 27

    5 begin: BEG .

    $default  reduce using rule 5 (begin)


State 28

    2 main_body: main_specification IS declarative_part begin . sequence_of_statements exception_part END ';'

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 47
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 29

   20 declarative_part: types ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 54
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


State 30

   19 declarative_part: objects ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 55
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


State 31

   21 declarative_part: exceptions ';' . declarative_part

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 56
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


State 32

   16 identifier_list: ID ',' identifier_list .

    $default  reduce using rule 16 (identifier_list)


State 33

   25 types: TYPE ID IS . ARRAY '(' constant_number DOTDOT constant_number ')' OF type_name
   26      | TYPE ID IS . RECORD component_list ENDREC
   27      | TYPE ID IS . '(' identifier_list ')'
   28      | TYPE ID IS . RANGE constant_number DOTDOT constant_number

    ARRAY   shift, and go to state 57
    RECORD  shift, and go to state 58
    RANGE   shift, and go to state 59
    '('     shift, and go to state 60


State 34

    8 formal_parameter_part: '(' parameters . ')'
   10 parameters: parameters . ';' identifier_list ':' mode type_name

    ';'  shift, and go to state 61
    ')'  shift, and go to state 62


State 35

   11 parameters: identifier_list . ':' mode type_name

    ':'  shift, and go to state 63


State 36

    4 procedure_body: procedure_body_prime formal_parameter_part IS . declarative_part begin sequence_of_statements exception_part END ';'

    PROCEDURE  shift, and go to state 8
    ID         shift, and go to state 9
    TYPE       shift, and go to state 10

    $default  reduce using rule 24 (declarative_part_prime)

    procedure_body           go to state 11
    procedure_body_prime     go to state 12
    procedure_specification  go to state 13
    identifier_list          go to state 14
    declarative_part         go to state 64
    declarative_part_prime   go to state 16
    types                    go to state 17
    objects                  go to state 18
    exceptions               go to state 19


State 37

   18 type_name: ID .

    $default  reduce using rule 18 (type_name)


State 38

   33 objects: identifier_list ':' CONSTANT . ASSIGN constant_expression

    ASSIGN  shift, and go to state 65


State 39

   37 exceptions: identifier_list ':' EXCEPTION .

    $default  reduce using rule 37 (exceptions)


State 40

   32 objects: identifier_list ':' type_name .

    $default  reduce using rule 32 (objects)


State 41

   41 statement: ID . op_param op_assign ';'

    '('  shift, and go to state 66

    $default  reduce using rule 56 (op_param)

    op_param  go to state 67


State 42

   44 statement: RAISE . ID ';'
   45          | RAISE . ';'

    ID   shift, and go to state 68
    ';'  shift, and go to state 69


State 43

   40 statement: NULLWORD . ';'

    ';'  shift, and go to state 70


State 44

   66 loop_start: LOOP .

    $default  reduce using rule 66 (loop_start)


State 45

   76 if_begin: IF .

    $default  reduce using rule 76 (if_begin)


State 46

   46 statement: CASE . case_exp IS caseList ENDCASE ';'

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    case_exp           go to state 76
    expression         go to state 77
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 47

    2 main_body: main_specification IS declarative_part begin sequence_of_statements . exception_part END ';'

    EXCEPTION  shift, and go to state 83

    $default  reduce using rule 114 (exception_part)

    exception_part   go to state 84
    exception_start  go to state 85


State 48

   38 sequence_of_statements: statement . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 86
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 49

   42 statement: loop_part .

    $default  reduce using rule 42 (statement)


State 50

   65 loop_part: loop_start . loop_stmt_list ENDLOOP ';'

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46
    EXIT      shift, and go to state 87
    EXITWHEN  shift, and go to state 88

    statement       go to state 89
    loop_part       go to state 49
    loop_start      go to state 50
    loop_stmt_list  go to state 90
    loop_stmt       go to state 91
    exit_cond       go to state 92
    if_statement    go to state 51
    if_start        go to state 52
    if_begin        go to state 53


State 51

   43 statement: if_statement .

    $default  reduce using rule 43 (statement)


State 52

   74 if_statement: if_start . else_if else ENDIF ';'

    ELSEIF  shift, and go to state 93

    $default  reduce using rule 78 (else_if)

    else_if        go to state 94
    else_if_start  go to state 95
    else_if_begin  go to state 96


State 53

   75 if_start: if_begin . condition then sequence_of_statements

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    condition          go to state 97
    expression         go to state 98
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 54

   20 declarative_part: types ';' declarative_part .

    $default  reduce using rule 20 (declarative_part)


State 55

   19 declarative_part: objects ';' declarative_part .

    $default  reduce using rule 19 (declarative_part)


State 56

   21 declarative_part: exceptions ';' declarative_part .

    $default  reduce using rule 21 (declarative_part)


State 57

   25 types: TYPE ID IS ARRAY . '(' constant_number DOTDOT constant_number ')' OF type_name

    '('  shift, and go to state 99


State 58

   26 types: TYPE ID IS RECORD . component_list ENDREC

    ID  shift, and go to state 9

    identifier_list  go to state 100
    component_list   go to state 101
    component        go to state 102
    objects          go to state 103


State 59

   28 types: TYPE ID IS RANGE . constant_number DOTDOT constant_number

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant_number  go to state 106


State 60

   27 types: TYPE ID IS '(' . identifier_list ')'

    ID  shift, and go to state 9

    identifier_list  go to state 107


State 61

   10 parameters: parameters ';' . identifier_list ':' mode type_name

    ID  shift, and go to state 9

    identifier_list  go to state 108


State 62

    8 formal_parameter_part: '(' parameters ')' .

    $default  reduce using rule 8 (formal_parameter_part)


State 63

   11 parameters: identifier_list ':' . mode type_name

    IN   shift, and go to state 109
    OUT  shift, and go to state 110

    $default  reduce using rule 15 (mode)

    mode  go to state 111


State 64

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part . begin sequence_of_statements exception_part END ';'

    BEG  shift, and go to state 27

    begin  go to state 112


State 65

   33 objects: identifier_list ':' CONSTANT ASSIGN . constant_expression

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    constant_expression  go to state 113
    expression           go to state 114
    relation             go to state 78
    simple_expression    go to state 79
    term                 go to state 80
    factor               go to state 81
    primary              go to state 82


State 66

   55 op_param: '(' . expression_list ')'

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    expression_list    go to state 115
    expression         go to state 116
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 67

   41 statement: ID op_param . op_assign ';'

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 59 (op_assign)

    op_assign  go to state 118


State 68

   44 statement: RAISE ID . ';'

    ';'  shift, and go to state 119


State 69

   45 statement: RAISE ';' .

    $default  reduce using rule 45 (statement)


State 70

   40 statement: NULLWORD ';' .

    $default  reduce using rule 40 (statement)


State 71

   98 primary: ID .
  100        | ID . '(' expression ')'

    '('  shift, and go to state 120

    $default  reduce using rule 98 (primary)


State 72

   97 primary: NUMBER .

    $default  reduce using rule 97 (primary)


State 73

   96 factor: NOT . primary

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    '('     shift, and go to state 74

    primary  go to state 121


State 74

   99 primary: '(' . expression ')'

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    expression         go to state 122
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 75

   90 simple_expression: '-' . term

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74

    term     go to state 123
    factor   go to state 81
    primary  go to state 82


State 76

   46 statement: CASE case_exp . IS caseList ENDCASE ';'

    IS  shift, and go to state 124


State 77

   47 case_exp: expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126

    $default  reduce using rule 47 (case_exp)

    boolean_operation  go to state 127


State 78

   85 expression: relation .
   88 relation: relation . relational_operation simple_expression

    EQ   shift, and go to state 128
    NEQ  shift, and go to state 129
    LT   shift, and go to state 130
    GT   shift, and go to state 131
    GTE  shift, and go to state 132
    LTE  shift, and go to state 133

    $default  reduce using rule 85 (expression)

    relational_operation  go to state 134


State 79

   87 relation: simple_expression .
   91 simple_expression: simple_expression . adding_operation term

    '-'  shift, and go to state 135
    '+'  shift, and go to state 136

    $default  reduce using rule 87 (relation)

    adding_operation  go to state 137


State 80

   89 simple_expression: term .
   93 term: term . multiplying_operation factor

    '*'  shift, and go to state 138
    '/'  shift, and go to state 139

    $default  reduce using rule 89 (simple_expression)

    multiplying_operation  go to state 140


State 81

   92 term: factor .

    $default  reduce using rule 92 (term)


State 82

   94 factor: primary .
   95       | primary . EXP primary

    EXP  shift, and go to state 141

    $default  reduce using rule 94 (factor)


State 83

  115 exception_start: EXCEPTION .

    $default  reduce using rule 115 (exception_start)


State 84

    2 main_body: main_specification IS declarative_part begin sequence_of_statements exception_part . END ';'

    END  shift, and go to state 142


State 85

  113 exception_part: exception_start . exceptionList

    WHEN  shift, and go to state 143

    exceptionList     go to state 144
    exceptionHandler  go to state 145


State 86

   38 sequence_of_statements: statement sequence_of_statements .

    $default  reduce using rule 38 (sequence_of_statements)


State 87

   71 exit_cond: EXIT . ';'

    ';'  shift, and go to state 146


State 88

   72 exit_cond: EXITWHEN . condition ';'

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    condition          go to state 147
    expression         go to state 98
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 89

   69 loop_stmt: statement .

    $default  reduce using rule 69 (loop_stmt)


State 90

   65 loop_part: loop_start loop_stmt_list . ENDLOOP ';'
   68 loop_stmt_list: loop_stmt_list . loop_stmt

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46
    EXIT      shift, and go to state 87
    ENDLOOP   shift, and go to state 148
    EXITWHEN  shift, and go to state 88

    statement     go to state 89
    loop_part     go to state 49
    loop_start    go to state 50
    loop_stmt     go to state 149
    exit_cond     go to state 92
    if_statement  go to state 51
    if_start      go to state 52
    if_begin      go to state 53


State 91

   67 loop_stmt_list: loop_stmt .

    $default  reduce using rule 67 (loop_stmt_list)


State 92

   70 loop_stmt: exit_cond .

    $default  reduce using rule 70 (loop_stmt)


State 93

   80 else_if_begin: ELSEIF .

    $default  reduce using rule 80 (else_if_begin)


State 94

   74 if_statement: if_start else_if . else ENDIF ';'

    ELSE  shift, and go to state 150

    $default  reduce using rule 82 (else)

    else        go to state 151
    else_begin  go to state 152


State 95

   77 else_if: else_if_start . else_if

    ELSEIF  shift, and go to state 93

    $default  reduce using rule 78 (else_if)

    else_if        go to state 153
    else_if_start  go to state 95
    else_if_begin  go to state 96


State 96

   79 else_if_start: else_if_begin . condition then sequence_of_statements

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    condition          go to state 154
    expression         go to state 98
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 97

   75 if_start: if_begin condition . then sequence_of_statements

    THEN  shift, and go to state 155

    then  go to state 156


State 98

   73 condition: expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126

    $default  reduce using rule 73 (condition)

    boolean_operation  go to state 127


State 99

   25 types: TYPE ID IS ARRAY '(' . constant_number DOTDOT constant_number ')' OF type_name

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant_number  go to state 157


State 100

   32 objects: identifier_list . ':' type_name
   33        | identifier_list . ':' CONSTANT ASSIGN constant_expression

    ':'  shift, and go to state 158


State 101

   26 types: TYPE ID IS RECORD component_list . ENDREC

    ENDREC  shift, and go to state 159


State 102

   29 component_list: component . ';' component_list
   30               | component . ';'

    ';'  shift, and go to state 160


State 103

   31 component: objects .

    $default  reduce using rule 31 (component)


State 104

   34 constant_number: ID .

    $default  reduce using rule 34 (constant_number)


State 105

   35 constant_number: NUMBER .

    $default  reduce using rule 35 (constant_number)


State 106

   28 types: TYPE ID IS RANGE constant_number . DOTDOT constant_number

    DOTDOT  shift, and go to state 161


State 107

   27 types: TYPE ID IS '(' identifier_list . ')'

    ')'  shift, and go to state 162


State 108

   10 parameters: parameters ';' identifier_list . ':' mode type_name

    ':'  shift, and go to state 163


State 109

   12 mode: IN . OUT
   14     | IN .

    OUT  shift, and go to state 164

    $default  reduce using rule 14 (mode)


State 110

   13 mode: OUT .

    $default  reduce using rule 13 (mode)


State 111

   11 parameters: identifier_list ':' mode . type_name

    ID  shift, and go to state 37

    type_name  go to state 165


State 112

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin . sequence_of_statements exception_part END ';'

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 166
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 113

   33 objects: identifier_list ':' CONSTANT ASSIGN constant_expression .

    $default  reduce using rule 33 (objects)


State 114

   36 constant_expression: expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126

    $default  reduce using rule 36 (constant_expression)

    boolean_operation  go to state 127


State 115

   55 op_param: '(' expression_list . ')'

    ')'  shift, and go to state 167


State 116

   63 expression_list: expression . ',' expression_list
   64                | expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126
    ','  shift, and go to state 168

    $default  reduce using rule 64 (expression_list)

    boolean_operation  go to state 127


State 117

   57 op_assign: ASSIGN . expression
   58          | ASSIGN . enum_list

    ID      shift, and go to state 169
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    enum_list          go to state 170
    expression         go to state 171
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 118

   41 statement: ID op_param op_assign . ';'

    ';'  shift, and go to state 172


State 119

   44 statement: RAISE ID ';' .

    $default  reduce using rule 44 (statement)


State 120

  100 primary: ID '(' . expression ')'

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    expression         go to state 173
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 121

   96 factor: NOT primary .

    $default  reduce using rule 96 (factor)


State 122

   86 expression: expression . boolean_operation relation
   99 primary: '(' expression . ')'

    AND  shift, and go to state 125
    OR   shift, and go to state 126
    ')'  shift, and go to state 174

    boolean_operation  go to state 127


State 123

   90 simple_expression: '-' term .
   93 term: term . multiplying_operation factor

    '*'  shift, and go to state 138
    '/'  shift, and go to state 139

    $default  reduce using rule 90 (simple_expression)

    multiplying_operation  go to state 140


State 124

   46 statement: CASE case_exp IS . caseList ENDCASE ';'

    WHEN  shift, and go to state 175

    caseList     go to state 176
    caseHandler  go to state 177


State 125

  101 boolean_operation: AND .

    $default  reduce using rule 101 (boolean_operation)


State 126

  102 boolean_operation: OR .

    $default  reduce using rule 102 (boolean_operation)


State 127

   86 expression: expression boolean_operation . relation

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    relation           go to state 178
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 128

  103 relational_operation: EQ .

    $default  reduce using rule 103 (relational_operation)


State 129

  104 relational_operation: NEQ .

    $default  reduce using rule 104 (relational_operation)


State 130

  105 relational_operation: LT .

    $default  reduce using rule 105 (relational_operation)


State 131

  106 relational_operation: GT .

    $default  reduce using rule 106 (relational_operation)


State 132

  107 relational_operation: GTE .

    $default  reduce using rule 107 (relational_operation)


State 133

  108 relational_operation: LTE .

    $default  reduce using rule 108 (relational_operation)


State 134

   88 relation: relation relational_operation . simple_expression

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    simple_expression  go to state 179
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 135

  110 adding_operation: '-' .

    $default  reduce using rule 110 (adding_operation)


State 136

  109 adding_operation: '+' .

    $default  reduce using rule 109 (adding_operation)


State 137

   91 simple_expression: simple_expression adding_operation . term

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74

    term     go to state 180
    factor   go to state 81
    primary  go to state 82


State 138

  111 multiplying_operation: '*' .

    $default  reduce using rule 111 (multiplying_operation)


State 139

  112 multiplying_operation: '/' .

    $default  reduce using rule 112 (multiplying_operation)


State 140

   93 term: term multiplying_operation . factor

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74

    factor   go to state 181
    primary  go to state 82


State 141

   95 factor: primary EXP . primary

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    '('     shift, and go to state 74

    primary  go to state 182


State 142

    2 main_body: main_specification IS declarative_part begin sequence_of_statements exception_part END . ';'

    ';'  shift, and go to state 183


State 143

  118 exceptionHandler: WHEN . choice_sequence ARROW sequence_of_statements

    ID      shift, and go to state 184
    OTHERS  shift, and go to state 185

    choice_sequence  go to state 186


State 144

  113 exception_part: exception_start exceptionList .
  116 exceptionList: exceptionList . exceptionHandler

    WHEN  shift, and go to state 143

    $default  reduce using rule 113 (exception_part)

    exceptionHandler  go to state 187


State 145

  117 exceptionList: exceptionHandler .

    $default  reduce using rule 117 (exceptionList)


State 146

   71 exit_cond: EXIT ';' .

    $default  reduce using rule 71 (exit_cond)


State 147

   72 exit_cond: EXITWHEN condition . ';'

    ';'  shift, and go to state 188


State 148

   65 loop_part: loop_start loop_stmt_list ENDLOOP . ';'

    ';'  shift, and go to state 189


State 149

   68 loop_stmt_list: loop_stmt_list loop_stmt .

    $default  reduce using rule 68 (loop_stmt_list)


State 150

   83 else_begin: ELSE .

    $default  reduce using rule 83 (else_begin)


State 151

   74 if_statement: if_start else_if else . ENDIF ';'

    ENDIF  shift, and go to state 190


State 152

   81 else: else_begin . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 191
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 153

   77 else_if: else_if_start else_if .

    $default  reduce using rule 77 (else_if)


State 154

   79 else_if_start: else_if_begin condition . then sequence_of_statements

    THEN  shift, and go to state 155

    then  go to state 192


State 155

   84 then: THEN .

    $default  reduce using rule 84 (then)


State 156

   75 if_start: if_begin condition then . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 193
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 157

   25 types: TYPE ID IS ARRAY '(' constant_number . DOTDOT constant_number ')' OF type_name

    DOTDOT  shift, and go to state 194


State 158

   32 objects: identifier_list ':' . type_name
   33        | identifier_list ':' . CONSTANT ASSIGN constant_expression

    ID        shift, and go to state 37
    CONSTANT  shift, and go to state 38

    type_name  go to state 40


State 159

   26 types: TYPE ID IS RECORD component_list ENDREC .

    $default  reduce using rule 26 (types)


State 160

   29 component_list: component ';' . component_list
   30               | component ';' .

    ID  shift, and go to state 9

    $default  reduce using rule 30 (component_list)

    identifier_list  go to state 100
    component_list   go to state 195
    component        go to state 102
    objects          go to state 103


State 161

   28 types: TYPE ID IS RANGE constant_number DOTDOT . constant_number

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant_number  go to state 196


State 162

   27 types: TYPE ID IS '(' identifier_list ')' .

    $default  reduce using rule 27 (types)


State 163

   10 parameters: parameters ';' identifier_list ':' . mode type_name

    IN   shift, and go to state 109
    OUT  shift, and go to state 110

    $default  reduce using rule 15 (mode)

    mode  go to state 197


State 164

   12 mode: IN OUT .

    $default  reduce using rule 12 (mode)


State 165

   11 parameters: identifier_list ':' mode type_name .

    $default  reduce using rule 11 (parameters)


State 166

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin sequence_of_statements . exception_part END ';'

    EXCEPTION  shift, and go to state 83

    $default  reduce using rule 114 (exception_part)

    exception_part   go to state 198
    exception_start  go to state 85


State 167

   55 op_param: '(' expression_list ')' .

    $default  reduce using rule 55 (op_param)


State 168

   63 expression_list: expression ',' . expression_list

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    expression_list    go to state 199
    expression         go to state 116
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 169

   60 enum_list: ID . TICK ID '(' expression ')'
   61          | ID . TICK ID '(' enum_list ')'
   62          | ID . TICK ID
   98 primary: ID .
  100        | ID . '(' expression ')'

    TICK  shift, and go to state 200
    '('   shift, and go to state 120

    $default  reduce using rule 98 (primary)


State 170

   58 op_assign: ASSIGN enum_list .

    $default  reduce using rule 58 (op_assign)


State 171

   57 op_assign: ASSIGN expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126

    $default  reduce using rule 57 (op_assign)

    boolean_operation  go to state 127


State 172

   41 statement: ID op_param op_assign ';' .

    $default  reduce using rule 41 (statement)


State 173

   86 expression: expression . boolean_operation relation
  100 primary: ID '(' expression . ')'

    AND  shift, and go to state 125
    OR   shift, and go to state 126
    ')'  shift, and go to state 201

    boolean_operation  go to state 127


State 174

   99 primary: '(' expression ')' .

    $default  reduce using rule 99 (primary)


State 175

   50 caseHandler: WHEN . case_choice ARROW sequence_of_statements

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    OTHERS  shift, and go to state 202
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    case_choice           go to state 203
    case_choice_sequence  go to state 204
    expression            go to state 205
    relation              go to state 78
    simple_expression     go to state 79
    term                  go to state 80
    factor                go to state 81
    primary               go to state 82


State 176

   46 statement: CASE case_exp IS caseList . ENDCASE ';'
   48 caseList: caseList . caseHandler

    WHEN     shift, and go to state 175
    ENDCASE  shift, and go to state 206

    caseHandler  go to state 207


State 177

   49 caseList: caseHandler .

    $default  reduce using rule 49 (caseList)


State 178

   86 expression: expression boolean_operation relation .
   88 relation: relation . relational_operation simple_expression

    EQ   shift, and go to state 128
    NEQ  shift, and go to state 129
    LT   shift, and go to state 130
    GT   shift, and go to state 131
    GTE  shift, and go to state 132
    LTE  shift, and go to state 133

    $default  reduce using rule 86 (expression)

    relational_operation  go to state 134


State 179

   88 relation: relation relational_operation simple_expression .
   91 simple_expression: simple_expression . adding_operation term

    '-'  shift, and go to state 135
    '+'  shift, and go to state 136

    $default  reduce using rule 88 (relation)

    adding_operation  go to state 137


State 180

   91 simple_expression: simple_expression adding_operation term .
   93 term: term . multiplying_operation factor

    '*'  shift, and go to state 138
    '/'  shift, and go to state 139

    $default  reduce using rule 91 (simple_expression)

    multiplying_operation  go to state 140


State 181

   93 term: term multiplying_operation factor .

    $default  reduce using rule 93 (term)


State 182

   95 factor: primary EXP primary .

    $default  reduce using rule 95 (factor)


State 183

    2 main_body: main_specification IS declarative_part begin sequence_of_statements exception_part END ';' .

    $default  reduce using rule 2 (main_body)


State 184

  120 choice_sequence: ID .

    $default  reduce using rule 120 (choice_sequence)


State 185

  121 choice_sequence: OTHERS .

    $default  reduce using rule 121 (choice_sequence)


State 186

  118 exceptionHandler: WHEN choice_sequence . ARROW sequence_of_statements
  119 choice_sequence: choice_sequence . '|' ID

    ARROW  shift, and go to state 208
    '|'    shift, and go to state 209


State 187

  116 exceptionList: exceptionList exceptionHandler .

    $default  reduce using rule 116 (exceptionList)


State 188

   72 exit_cond: EXITWHEN condition ';' .

    $default  reduce using rule 72 (exit_cond)


State 189

   65 loop_part: loop_start loop_stmt_list ENDLOOP ';' .

    $default  reduce using rule 65 (loop_part)


State 190

   74 if_statement: if_start else_if else ENDIF . ';'

    ';'  shift, and go to state 210


State 191

   81 else: else_begin sequence_of_statements .

    $default  reduce using rule 81 (else)


State 192

   79 else_if_start: else_if_begin condition then . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 211
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 193

   75 if_start: if_begin condition then sequence_of_statements .

    $default  reduce using rule 75 (if_start)


State 194

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT . constant_number ')' OF type_name

    ID      shift, and go to state 104
    NUMBER  shift, and go to state 105

    constant_number  go to state 212


State 195

   29 component_list: component ';' component_list .

    $default  reduce using rule 29 (component_list)


State 196

   28 types: TYPE ID IS RANGE constant_number DOTDOT constant_number .

    $default  reduce using rule 28 (types)


State 197

   10 parameters: parameters ';' identifier_list ':' mode . type_name

    ID  shift, and go to state 37

    type_name  go to state 213


State 198

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin sequence_of_statements exception_part . END ';'

    END  shift, and go to state 214


State 199

   63 expression_list: expression ',' expression_list .

    $default  reduce using rule 63 (expression_list)


State 200

   60 enum_list: ID TICK . ID '(' expression ')'
   61          | ID TICK . ID '(' enum_list ')'
   62          | ID TICK . ID

    ID  shift, and go to state 215


State 201

  100 primary: ID '(' expression ')' .

    $default  reduce using rule 100 (primary)


State 202

   54 case_choice_sequence: OTHERS .

    $default  reduce using rule 54 (case_choice_sequence)


State 203

   50 caseHandler: WHEN case_choice . ARROW sequence_of_statements

    ARROW  shift, and go to state 216


State 204

   51 case_choice: case_choice_sequence .

    $default  reduce using rule 51 (case_choice)


State 205

   52 case_choice_sequence: expression . '|' case_choice_sequence
   53                     | expression .
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126
    '|'  shift, and go to state 217

    $default  reduce using rule 53 (case_choice_sequence)

    boolean_operation  go to state 127


State 206

   46 statement: CASE case_exp IS caseList ENDCASE . ';'

    ';'  shift, and go to state 218


State 207

   48 caseList: caseList caseHandler .

    $default  reduce using rule 48 (caseList)


State 208

  118 exceptionHandler: WHEN choice_sequence ARROW . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 219
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 209

  119 choice_sequence: choice_sequence '|' . ID

    ID  shift, and go to state 220


State 210

   74 if_statement: if_start else_if else ENDIF ';' .

    $default  reduce using rule 74 (if_statement)


State 211

   79 else_if_start: else_if_begin condition then sequence_of_statements .

    $default  reduce using rule 79 (else_if_start)


State 212

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT constant_number . ')' OF type_name

    ')'  shift, and go to state 221


State 213

   10 parameters: parameters ';' identifier_list ':' mode type_name .

    $default  reduce using rule 10 (parameters)


State 214

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin sequence_of_statements exception_part END . ';'

    ';'  shift, and go to state 222


State 215

   60 enum_list: ID TICK ID . '(' expression ')'
   61          | ID TICK ID . '(' enum_list ')'
   62          | ID TICK ID .

    '('  shift, and go to state 223

    $default  reduce using rule 62 (enum_list)


State 216

   50 caseHandler: WHEN case_choice ARROW . sequence_of_statements

    ID        shift, and go to state 41
    RAISE     shift, and go to state 42
    NULLWORD  shift, and go to state 43
    LOOP      shift, and go to state 44
    IF        shift, and go to state 45
    CASE      shift, and go to state 46

    $default  reduce using rule 39 (sequence_of_statements)

    sequence_of_statements  go to state 224
    statement               go to state 48
    loop_part               go to state 49
    loop_start              go to state 50
    if_statement            go to state 51
    if_start                go to state 52
    if_begin                go to state 53


State 217

   52 case_choice_sequence: expression '|' . case_choice_sequence

    ID      shift, and go to state 71
    NUMBER  shift, and go to state 72
    OTHERS  shift, and go to state 202
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    case_choice_sequence  go to state 225
    expression            go to state 205
    relation              go to state 78
    simple_expression     go to state 79
    term                  go to state 80
    factor                go to state 81
    primary               go to state 82


State 218

   46 statement: CASE case_exp IS caseList ENDCASE ';' .

    $default  reduce using rule 46 (statement)


State 219

  118 exceptionHandler: WHEN choice_sequence ARROW sequence_of_statements .

    $default  reduce using rule 118 (exceptionHandler)


State 220

  119 choice_sequence: choice_sequence '|' ID .

    $default  reduce using rule 119 (choice_sequence)


State 221

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT constant_number ')' . OF type_name

    OF  shift, and go to state 226


State 222

    4 procedure_body: procedure_body_prime formal_parameter_part IS declarative_part begin sequence_of_statements exception_part END ';' .

    $default  reduce using rule 4 (procedure_body)


State 223

   60 enum_list: ID TICK ID '(' . expression ')'
   61          | ID TICK ID '(' . enum_list ')'

    ID      shift, and go to state 169
    NUMBER  shift, and go to state 72
    NOT     shift, and go to state 73
    '('     shift, and go to state 74
    '-'     shift, and go to state 75

    enum_list          go to state 227
    expression         go to state 228
    relation           go to state 78
    simple_expression  go to state 79
    term               go to state 80
    factor             go to state 81
    primary            go to state 82


State 224

   50 caseHandler: WHEN case_choice ARROW sequence_of_statements .

    $default  reduce using rule 50 (caseHandler)


State 225

   52 case_choice_sequence: expression '|' case_choice_sequence .

    $default  reduce using rule 52 (case_choice_sequence)


State 226

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT constant_number ')' OF . type_name

    ID  shift, and go to state 37

    type_name  go to state 229


State 227

   61 enum_list: ID TICK ID '(' enum_list . ')'

    ')'  shift, and go to state 230


State 228

   60 enum_list: ID TICK ID '(' expression . ')'
   86 expression: expression . boolean_operation relation

    AND  shift, and go to state 125
    OR   shift, and go to state 126
    ')'  shift, and go to state 231

    boolean_operation  go to state 127


State 229

   25 types: TYPE ID IS ARRAY '(' constant_number DOTDOT constant_number ')' OF type_name .

    $default  reduce using rule 25 (types)


State 230

   61 enum_list: ID TICK ID '(' enum_list ')' .

    $default  reduce using rule 61 (enum_list)


State 231

   60 enum_list: ID TICK ID '(' expression ')' .

    $default  reduce using rule 60 (enum_list)
