/* ## (c) 2017, Arkadiusz Drabczyk, arkadiusz@drabczyk.org */
//https://gist.github.com/ardrabczyk/1cdc413b9eaa9a9a0c4be71d3fc9bc37
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct LL_node {
	char * data;
	struct LL_node *next;
};


int init(struct LL_node *head, char * data)
{
	head = malloc(sizeof(struct LL_node));
	if (!head) {
        fprintf(stderr, "Failed to init a linked list\n");
        return 1;
    }

    head -> data = data;
    head->next = NULL;

    return 0;
}

int insertList(struct LL_node *head, char * data)
{
    struct LL_node *current = head;
    struct LL_node *tmp;

    do {
        tmp = current;
        current = current->next;
    } while (current);

    /* create a new LL_node after tmp */
    struct LL_node *new = malloc(sizeof(struct LL_node));
    if (!new) {
        fprintf(stderr, "Failed to insert a new element\n");
        return 1;
    }
    new->next = NULL;
    new->data = data;

    tmp->next = new;

    return 0;

}


void print(struct LL_node *head)
{
    struct LL_node *current = head;
    while (current) {
        printf("current data: %s, address: %p\n", current->data, current);
        current = current->next;
    }
}


int main(void)
{
    struct LL_node *head;
    
   if (init(head, "25") != 0) {
        fprintf(stderr, "Failed to init a new linked list");
        return EXIT_FAILURE;
    }

    insertList(head, "26");
    insertList(head, "27");
    insertList(head, "28");
    insertList(head, "29");

    puts("Print the linked list:");
    print(head);

    puts("\nAdd more elements.");
    insertList(head, "25");
    insertList(head, "25");
    insertList(head, "25");
    puts("Print the linked list:");
    print(head);

    return EXIT_SUCCESS;
}

